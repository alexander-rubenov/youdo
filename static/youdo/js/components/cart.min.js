"use strict";function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,o)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(r,!0).forEach(function(t){_defineProperty(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}!function(){axios.defaults.baseURL=window.location.origin;var e=1,t=10;Vue.component("free-service-item",{delimiters:["[[","]]"],template:"#free-service-item",props:{freeCartItem:Object}}),Vue.component("service-item",{delimiters:["[[","]]"],template:"#service-item",props:{cartItem:Object,removeFromCart:Function,renderOrderUpdateResult:Function,markFreeItem:Function},data:function(){return{cartItemInfo:Object}},created:function(){},computed:{getItemLink:function(){var e=this.cartItem.item,t=e.object_type,r=e.id;return"".concat(t.toLowerCase(),"/").concat(r)}},methods:{updateCartItem:function(e){var t=this,r=new FormData,o=this.cartItem,i=o.uuid,n=o.count,a=this.$attrs["order-uuid"];if(r.append("uuid",i),r.append("csrfmiddlewaretoken",window.utils.csrfToken),this.cartItem.item.hasOwnProperty("services")){var c=this.cartItem.item.services.filter(function(t){return t.id===e})[0];r.append("service_id",c.id),r.append("service_count",c.in_order_count)}else r.append("count",n);axios.post("api/order/".concat(a,"/item/update"),r).then(function(e){var r=e.data;t.renderOrderUpdateResult(r)})},changePackageServiceAmount:function(r,o){var i=this.cartItem,n=i.item,a=n.services,c=n.price,s=i.count,d=a.filter(function(e){return e.id===r})[0];if(t>=d.in_order_count>=e){switch(o){case"plus":d.in_order_count<t&&(d.in_order_count+=1);break;case"minus":d.in_order_count>d.default_count&&(d.in_order_count-=1)}d.additional_price=(d.in_order_count-d.default_count)*d.price,this.cartItem.total_price=c*s+d.additional_price,this.updateCartItem(r)}},changeServiceAmount:function(r,o){var i=this.cartItem.count;if(t>=i>=e){switch(o){case"plus":i<t&&(this.cartItem.count+=1);break;case"minus":i>e&&(this.cartItem.count-=1)}this.cartItem.total_price=this.cartItem.item.price*this.cartItem.count,this.updateCartItem()}}}});new Vue({delimiters:["[[","]]"],el:"#cart",data:function(){return{cartItems:[],freeCartItems:[],orderUUID:String,areItemsFetching:!0,totalCartSum:0,promocode:{discount:null,error:{text:"",status:!1}}}},computed:{isPromocodeActivated:function(){var e=this.promocode,t=e.discount,r=e.error.status;return t>0&&!1===r}},mounted:function(){this.orderUUID=this.$el.dataset.orderUuid,this.getInitialCartState()},methods:{getInitialCartState:function(){var e=this;void 0!==this.orderUUID&&axios.get("api/order/".concat(this.orderUUID)).then(function(t){var r,o=t.data;(r=e.cartItems).push.apply(r,_toConsumableArray(o.items)),e.totalCartSum=o.total_price,e.promocode.discount=o.promocode_discount,e.areItemsFetching=!1})},renderOrderUpdateResult:function(e){var t=e.order_total_price,r=e.order_items_count,o=document.querySelector(".header__button--cart"),i=o.querySelector(".header__cart-text"),n=o.querySelector(".header__orders-count"),a=document.querySelector(".quick-order__total-price");this.totalCartSum=t,a.innerText="".concat(t,"₽"),i.innerText="".concat(t,"₽"),Boolean(r)&&(n.innerText=r)},getFreeItemId:function(e){var t;return e.map(function(e){if(e.hasOwnProperty("is_free")&&void 0!==e.is_free)return t=e.item_uuid}),{free_item_uuid:t}},markFreeItem:function(e){var t=this,r=e.free_item_uuid,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cartItems;this.freeCartItems=[],o.map(function(e){if(e.item_uuid===r)if(e.item_count>1){var o=_objectSpread({},e,{is_free:!0,item_count:1,item_total_price:"Бесплатно"});Vue.set(e,"is_free",!1),Vue.set(e,"isDecreasedByPromo",!0),e.isDecreased||(e.item_count-=1,e.isDecreased=!0),e.item_total_price=e.item_price*e.item_count,t.freeCartItems.push(o)}else Vue.set(e,"is_free",!0),Vue.set(e,"isDecreasedByPromo",!1),Vue.set(e,"item_total_price","Бесплатно"),Vue.set(e,"item_total_price","Бесплатно");else Vue.set(e,"is_free",!1),Vue.set(e,"isDecreasedByPromo",!1)})},removeFromCart:function(e){var t,r,o=this,i=new FormData;this.cartItems.map(function(t,o){if(t.item.id===e)return r=o}),t=this.cartItems[r].uuid,i.append("uuid",t),i.append("csrfmiddlewaretoken",window.utils.csrfToken),axios.post("api/order/".concat(this.orderUUID,"/item/remove"),i).then(function(e){var t=e.data,i=t.order_total_price,n=t.order_items_count,a=t.order_removed,c=t.item_info,s=c.name,d=c.id,u=c.price,m=c.category,p=c.quantity;if(Vue.delete(o.cartItems,r),Boolean(a))return window.location.reload();o.renderOrderUpdateResult({order_items_count:n,order_total_price:i}),dataLayer.push({event:"removeFromCart",ecommerce:{remove:{products:[{name:s,id:d,price:u,category:m,quantity:p}]}}})})},openPromocodeModal:function(e){window.modals.openModalWindow(e)},closePromocodeModal:function(e){window.modals.closeModalWindow(e.currentTarget.dataset.modalClose)},sendPromocode:function(e){var t=this;axios.post("api/order/".concat(this.orderUUID,"/promocode"),window.utils.collectFormData(e.target)).then(function(e){var r=e.data,o=r.order_total_price,i=r.promocode_discount;t.promocode.discount=i,t.promocode.error.text=null,t.promocode.error.status=!1,t.renderOrderUpdateResult({order_total_price:o}),setTimeout(function(){window.modals.closeModalWindow("promocode-modal")},1500)}).catch(function(e){var r=e.response.data.detail;t.promocode.error.text=r,t.promocode.error.status=!0})},removePromocode:function(){var e=this,t=new FormData;t.append("csrfmiddlewaretoken",window.utils.csrfToken),axios.post("/api/order/".concat(this.orderUUID,"/promocode/remove"),t).then(function(t){var r=t.data.order_total_price;e.renderOrderUpdateResult({order_total_price:r}),e.promocode.error.text=null,e.promocode.error.status=!1,e.promocode.discount=0})}}})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

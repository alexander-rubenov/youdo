"use strict";!function(){function e(e){return 204===e.status?{}:e.json()}function t(e){return e.status>=200&&e.status<300?Promise.resolve(e):Promise.reject(e)}window.urls={makeOrder:"/order/"},window.utils={csrfToken:document.getElementById("csrfToken").dataset.csrf,isUserAuthenticated:Boolean(document.getElementById("is_authenticated")),setStatus:function(e){return e.status>=200&&e.status<300?Promise.resolve(e):Promise.reject(e)},getCookie:function(e){var t=document.cookie.match(new RegExp("(?:^|; )"+e.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g,"\\$1")+"=([^;]*)"));return t?decodeURIComponent(t[1]):void 0},setCookie:function(e,t,n){var o=(n=n||{}).expires;if("number"==typeof o&&o){var i=new Date;i.setTime(i.getTime()+1e3*o),o=n.expires=i}o&&o.toUTCString&&(n.expires=o.toUTCString());var r=e+"="+(t=encodeURIComponent(t));for(var a in n){r+="; "+a;var s=n[a];!0!==s&&(r+="="+s)}document.cookie=r+"; path=/;"},removeCookie:function(e){document.cookie="".concat(e,"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;")},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},getParentBlock:function(e,t,n){for(var o=e.target;o!==t;){if(o.classList.contains(n))return o;o=o.parentNode}},collectFormData:function(e){var t=e.querySelectorAll("input"),n=new FormData;return t.forEach(function(e){n.append(e.name,e.value)}),n.append("csrfmiddlewaretoken",this.csrfToken),n},makeFetch:function(n,o){return fetch(n,o).then(t).then(e).then(function(e){return e}).catch(function(e){throw new Error(e)})},makeRequest:function(e,t){var n=this,o=e.url,i=e.method,r=e.body,a=void 0===r?null:r,s=new XMLHttpRequest,c=document.querySelector('*[data-disabled="disabled"]');s.onreadystatechange=function(){if(4===s.readyState&&200===s.status){var e=JSON.parse(s.responseText);t(e)}(4===s.readyState&&500===s.status||405===s.status)&&window.notifications.showNotification("error","Произошла ошибка сервера. Попробуйте позже."),4===s.readyState&&403===s.status&&window.notifications.showNotification("error","Произошла ошибка доступа. Перезапустите сайт."),n.enableSubmitButton(c)},s.open(i,o,!0),s.send(a)},setCustomVariableValue:function(e,t){document.documentElement.style.setProperty(e,t)},downloadFile:function(e){var t=document.createElement("a");t.style.display="none",t.setAttribute("href",e),t.setAttribute("download","pdf"),t.setAttribute("target","_blank"),document.body.appendChild(t),t.click(),document.body.removeChild(t)},parseErrors:function(e){Object.keys(e).forEach(function(t){var n=document.querySelector("*[type='".concat(t,"']")),o=n.parentElement;n.nextElementSibling.innerText=e[t][0].message,o.classList.add("user-account__label--error")})},isScrolledIntoView:function(e){if(0===e.left)return null;var t=window.pageYOffset+e.getBoundingClientRect().top,n=(window.pageXOffset,e.getBoundingClientRect().left,window.pageXOffset,e.getBoundingClientRect().right,window.pageYOffset+e.getBoundingClientRect().bottom),o=window.pageYOffset,i=(window.pageXOffset,window.pageXOffset,document.documentElement.clientWidth,window.pageYOffset+document.documentElement.clientHeight);return n>o&&t+.5*e.clientHeight<i},disableSubmitButton:function(e){e.setAttribute("disabled","disabled"),e.setAttribute("data-disabled","disabled"),e.innerHTML+='<svg class="btn__loader" viewBox="25 25 50 50" aria-hidden="true"><circle <svg class="btn__loader-circle" cx="50" cy="50" r="20"></circle></svg>'},enableSubmitButton:function(e){null!==e&&e.hasAttribute("disabled")&&(e.removeAttribute("disabled"),e.removeAttribute("data-disabled"),e.removeChild(document.querySelector(".btn__loader")))}}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
